{"version":3,"sources":["components/Cards/Cards.module.css","api/index.js","components/Cards/Cards.jsx","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","url","fetchData","country","a","urlWithCountry","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Cards","className","styles","container","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","barChart","backgroundColor","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","src","image","alt","img","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad35e417.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3Yjrv\",\"card\":\"Cards_card__155sx\",\"infected\":\"Cards_infected__uxNfE\",\"recovered\":\"Cards_recovered__1J2L_\",\"deaths\":\"Cards_deaths__3Lmtw\"};","import axios from \"axios\";\r\n\r\nlet url = \"https://covid.mathdro.id/api\";\r\nexport const fetchData = async (country) => {\r\n  let urlWithCountry=url;\r\n  if(country){\r\n    urlWithCountry=`${url}/countries/${country}`\r\n  }\r\n  try {\r\n    const {data:{confirmed,recovered,deaths,lastUpdate}} = await axios.get(urlWithCountry);\r\n    return {confirmed,recovered,deaths,lastUpdate};\r\n  } catch (error) {}\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {    \r\n    url='https://covid19.mathdro.id/api';\r\n    const {data} = await axios.get(`${url}/daily`);\r\n    const modifiedData=data.map((dailyData)=>({\r\n      confirmed:dailyData.confirmed.total,\r\n      deaths:dailyData.deaths.total,\r\n      recovered:dailyData.recovered.total,\r\n      date:dailyData.reportDate\r\n    }))\r\n    return modifiedData;\r\n  } catch (error) {}\r\n};\r\n\r\nexport const fetchCountries=async()=>{\r\n  try{\r\n    const {data:{countries}}= await axios.get(`${url}/countries`)\r\n\r\nreturn countries.map(country=> country.name);\r\n  }\r\n  catch(error){\r\n\r\n  }\r\n}","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport styles from \"./Cards.module.css\";\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames'\r\n\r\nconst Cards = ({data:{confirmed,recovered,deaths,lastUpdate}}) => {\r\nif(!confirmed){\r\n    return <div>Loading...</div>\r\n}\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={2} justify=\"center\" >\r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card,styles.infected)}>\r\n        <CardContent>\r\n        <Typography color=\"textSecondary\"  gutterBottom>Infected</Typography>\r\n        <Typography variant=\"h5\"><CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\"/></Typography>\r\n        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n        <Typography variant=\"body2\">No Of Active Cases of Covid19</Typography>\r\n        </CardContent>\r\n      </Grid>\r\n      <Grid item xs={12} md={3} component={Card} className={cx(styles.card,styles.recovered)}>\r\n        <CardContent>\r\n        <Typography color=\"textSecondary\"  gutterBottom>Recovered</Typography>\r\n        <Typography variant=\"h5\"><CountUp start={0} end={recovered.value} duration={2.5} separator=\",\"/></Typography>\r\n        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n        <Typography variant=\"body2\">No Of Recovered of Covid19</Typography>\r\n        </CardContent>\r\n      </Grid>\r\n      <Grid item xs={12} md={3} component={Card} className={cx(styles.card,styles.deaths)}>\r\n        <CardContent>\r\n        <Typography color=\"textSecondary\"  gutterBottom>Deaths</Typography>\r\n        <Typography variant=\"h5\"><CountUp start={0} end={deaths.value} duration={2.5} separator=\",\"/></Typography>\r\n        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n        <Typography variant=\"body2\">No Of Active Cases of Covid19</Typography>\r\n        </CardContent>\r\n      </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default Cards;\r\n","import {Line,Bar} from 'react-chartjs-2'\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\n\r\n\r\nimport styles from \"./Chart.module.css\";\r\nconst Chart = ({data:{confirmed,recovered,deaths},country}) => {\r\n\r\n    \r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n          setDailyData(await fetchDailyData());\r\n        };\r\n        fetchAPI();\r\n      },[]);\r\n\r\nconst lineChart=\r\n    dailyData.length &&(\r\n        <Line data={{\r\n            labels:dailyData.map(({date})=>date),\r\n            datasets:[{\r\n                data:dailyData.map(({confirmed})=>confirmed),\r\n                label:'Infected',\r\n                borderColor:'rgb(0,0,255)',\r\n                fill:true\r\n            },{\r\n                data:dailyData.map(({deaths})=>deaths),\r\n                label:'Deaths',\r\n                borderColor:'rgb(255,0,0)',\r\n                fill:true\r\n            },\r\n            {\r\n                data:dailyData.map(({recovered})=>recovered),\r\n                label:'Recovered',\r\n                borderColor:'rgb(0,255,0)',\r\n                fill:true\r\n            }]\r\n        }}/>     \r\n    )\r\n\r\n\r\n    \r\n    const barChart=\r\n        confirmed &&(\r\n            <Bar\r\n            data={{\r\n                   labels:['Infected','Recovered','Deaths'] ,\r\n                   datasets:[{\r\n                       label:\"People\",\r\n                       backgroundColor:['rgb(0,0,255)','rgb(0,255,0)','rgb(255,0,0)'],\r\n                       data:[confirmed.value,recovered.value,deaths.value]\r\n                   }]\r\n            } }\r\n            options={{\r\n                legend:{display:false},\r\n                title:{display:true,text:`Current State in ${country}`}\r\n            }}\r\n            />\r\n        )\r\n    \r\n\r\n\r\n\r\n    return <div className={styles.container}>\r\n        {country?barChart:lineChart}</div>;\r\n};\r\nexport default Chart;\r\n","import React,{useState,useEffect} from 'react'\r\nimport {NativeSelect,FormControl} from '@material-ui/core'\r\nimport styles from './CountryPicker.module.css'\r\nimport {fetchCountries} from '../../api'\r\nconst CountryPicker=({handleCountryChange})=>{\r\n\r\n    const [fetchedCountries, setFetchedCountries]=useState([]);\r\n    useEffect(()=>{\r\n        const countries=async()=>setFetchedCountries(await fetchCountries());\r\n        countries();\r\n    },[])\r\n\r\n    \r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n        <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\r\n        <option value=\"\">Global</option>\r\n        {fetchedCountries.map((country,i)=>\r\n        <option key={i} value={country}>{country}</option>\r\n        )\r\n}\r\n        \r\n        </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\nexport default CountryPicker","import React, { Component } from \"react\";\r\nimport styles from \"./App.module.css\";\r\nimport { fetchData } from \"./api\";\r\nimport { Cards, CountryPicker, Chart } from \"./components\";\r\nimport image from './images/image.png'\r\nclass App extends Component {\r\n  state = {\r\n    data: {},\r\n    country:''\r\n  };\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n    this.setState({ data: fetchedData });\r\n  }\r\n\r\n  handleCountryChange=async(country)=>{\r\n    const fetchedData = await fetchData(country);\r\n     this.setState({ data: fetchedData ,country:country});\r\n  }\r\n  render() {\r\n    const { data ,country} = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n        <img src={image} alt='COVID-19' className={styles.img}/>\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n        <Chart data={data} country={country} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2orsj\",\"img\":\"App_img__DCJqg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__gN0Uy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__dId5S\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}